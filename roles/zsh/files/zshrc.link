#!/usr/bin/env zsh
# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/dotfiles

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done


# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# Rebase current branch onto master, if an arg is provided, use 'git fpull $arg'
rebase() {
  branchname=$(git branch | grep '\*' | awk '{print $2}')
  if [ $1 ]
    then
    service=$1
    git fpull "$service"
  else
    git checkout master
    git pull --rebase
    git checkout $branchname
    git rebase master
  fi
}

# Add Aliases.
alias gg='git grep'
alias s="git status"
alias co='git checkout'
alias ll='ls -al'
alias l='ls -lah'
alias ad='./arc.sh diff'

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
